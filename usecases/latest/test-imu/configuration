# This is the "one-and-only" configuration for OpenDaVINCI.
# Its format is like:
#
# section.key=value
#
# If you have several modules of the same type, the following configuration
# scheme applies:
#
# global.key=value # <-- This configuration applies for all modules.
#
# section.key=value # <-- This configuration applies for all modules of type "section".
#
# section:ID.key=value # <-- This configuration applies for the module "ID" of type "section".


###############################################################################
###############################################################################
#
# GLOBAL CONFIGURATION
#

# The following attributes define the buffer sizes for recording and
# replaying. You need to adjust these parameters depending on the
# camera resolution for example (640x480x3 --> 1000000 for memorySegment,
# 1280x720x3 --> 2800000).
global.buffer.memorySegmentSize = 2800000 # Size of a memory segment in bytes.
global.buffer.numberOfMemorySegments = 4  # Number of memory segments.

# The following key describes the list of modules expected to participate in this --cid session.
global.session.expectedModules = copplar-control-example


###############################################################################
###############################################################################
#
# NEXT, THE CONFIGURATION FOR OpenDaVINCI TOOLS FOLLOWS. 
#
###############################################################################
###############################################################################
#
# CONFIGURATION FOR ODSUPERCOMPONENT
#

# If the managed level is pulse_shift, all connected modules will be informed
# about the supercomponent's real time by this increment per module. Thus, the
# execution times per modules are better aligned with supercomponent and the
# data exchange is somewhat more predictable.
odsupercomponent.pulseshift.shift = 10000 # (in microseconds)

# If the managed level is pulse_time_ack, this is the timeout for waiting for
# an ACK message from a connected client.
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)

# If the managed level is pulse_time_ack, the modules are triggered sequentially
# by sending pulses and waiting for acknowledgment messages. To allow the modules
# to deliver their respective containers, this yielding time is used to sleep
# before supercomponent sends the pulse messages the next module in this execution
# cycle. This value needs to be adjusted for networked simulations to ensure
# deterministic execution. 
odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds)

# List of modules (without blanks) that will not get a pulse message from odsupercomponent.
odsupercomponent.pulsetimeack.exclude = odcockpit

###############################################################################
###############################################################################
#
# CONFIGURATION FOR PROXY
#

###############################################################################
#
# CONFIGURATION FOR proxy-imu
#

proxy-imu:1.type = pololu.altimu10
proxy-imu:1.pololu.altimu10.device_node = /dev/i2c-2
proxy-imu:1.pololu.altimu10.address_type = high
proxy-imu:1.calibration_file = /opt/opendlv.core.configuration/calibration-high.txt
proxy-imu:1.lockcalibration = 0
proxy-imu:1.calibration_number_of_samples = 10000
proxy-imu:1.mount.roll = 0.0
proxy-imu:1.mount.pitch = 0.0
proxy-imu:1.mount.yaw = 0.0
proxy-imu:1.debug = 1


proxy-imu:2.type = pololu.altimu10
proxy-imu:2.pololu.altimu10.device_node = /dev/i2c-2
proxy-imu:2.pololu.altimu10.address_type = low
proxy-imu:2.calibration_file = /opt/opendlv.core.configuration/calibration-low.txt
proxy-imu:2.lockcalibration = 0
proxy-imu:2.calibration_number_of_samples = 10000
proxy-imu:2.mount.roll = 0.0
proxy-imu:2.mount.pitch = 0.0
proxy-imu:2.mount.yaw = 0.0
proxy-imu:2.debug = 1