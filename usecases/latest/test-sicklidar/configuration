# This is the "one-and-only" configuration for OpenDaVINCI.
# Its format is like:
#
# section.key=value
#
# If you have several modules of the same type, the following configuration
# scheme applies:
#
# global.key=value # <-- This configuration applies for all modules.
#
# section.key=value # <-- This configuration applies for all modules of type "section".
#
# section:ID.key=value # <-- This configuration applies for the module "ID" of type "section".


###############################################################################
###############################################################################
#
# GLOBAL CONFIGURATION
#

# The following attributes define the buffer sizes for recording and
# replaying. You need to adjust these parameters depending on the
# camera resolution for example (640x480x3 --> 1000000 for memorySegment,
# 1280x720x3 --> 2800000).
global.buffer.memorySegmentSize = 2800000 # Size of a memory segment in bytes.
global.buffer.numberOfMemorySegments = 4  # Number of memory segments.

# The following key describes the list of modules expected to participate in this --cid session.
# global.session.expectedModules = copplar-control-example


###############################################################################
###############################################################################
#
# NEXT, THE CONFIGURATION FOR OpenDaVINCI TOOLS FOLLOWS. 
#
###############################################################################
###############################################################################
#
# CONFIGURATION FOR ODSUPERCOMPONENT
#

# If the managed level is pulse_shift, all connected modules will be informed
# about the supercomponent's real time by this increment per module. Thus, the
# execution times per modules are better aligned with supercomponent and the
# data exchange is somewhat more predictable.
odsupercomponent.pulseshift.shift = 10000 # (in microseconds)

# If the managed level is pulse_time_ack, this is the timeout for waiting for
# an ACK message from a connected client.
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)

# If the managed level is pulse_time_ack, the modules are triggered sequentially
# by sending pulses and waiting for acknowledgment messages. To allow the modules
# to deliver their respective containers, this yielding time is used to sleep
# before supercomponent sends the pulse messages the next module in this execution
# cycle. This value needs to be adjusted for networked simulations to ensure
# deterministic execution. 
odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds)

# List of modules (without blanks) that will not get a pulse message from odsupercomponent.
odsupercomponent.pulsetimeack.exclude = odcockpit

###############################################################################
###############################################################################
#
# NEXT, THE CONFIGURATION FOR OPENDLV SOFTWARE FOLLOWS. 
#


###############################################################################
#
# CONFIGURATION FOR proxy-sick
#

proxy-sick.type = sick
#The total size of the shared memory: 
#MAX_POINT_SIZE * NUMBER_OF_COMPONENTS_PER_POINT * sizeof(float)
#where MAX_POINT_SIZE is the maximum number of points per frame (This upper bound should be set as low as possible, as it affects the shared memory size and thus the frame updating speed),
#NUMBER_OF_COMPONENTS_PER_POIN = 4 (x, y, z, intensity)
#MAX_POINT_SIZE = 180*2+1
#sizeof(float) = 4
proxy-sick.sharedMemory-size = 5776 # 4*4*(180*2+1)= 5776
proxy-sick.serial-port = /dev/ttyS1
proxy-sick.mount.x = 1.25
proxy-sick.mount.y = 0.0
proxy-sick.mount.z = 1.0
proxy-sick.mount.roll = 0.0
proxy-sick.mount.pitch = 0.0
proxy-sick.mount.yaw = 0.0
proxy-sick.record = 0  # Set to 1 to dump Lidar data in .rec format.
proxy-sick.debug = 1


odcockpit.directoriesForSharedLibaries = /opt
global.car = file:///opt/opendlv.data/Car.objx
global.scenario = file:///opt/opendlv.data/Track.scnx
global.showGrid = 0